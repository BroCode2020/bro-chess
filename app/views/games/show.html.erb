<% load 'lib/assets/view_bro.rb' %>

<% is_missing_player = (@game.black_player_id.nil? || @game.white_player_id.nil?) %>

<div class="chess-board-render">
	<% tile_color = 1 %>
	<% reverse = (@game.black_player_id == current_user.id) %>

	<% ViewBro.from_0_to_7(reverse).each do |y| %>
		<div class="board-row">

			<% 0.upto(7) do |x| %>
				<% tile_color = (tile_color == 0 ? 1 : 0) if x > 0 %>

				<div class="board-square <%= tile_color == 0 ? 'black': 'white' %>" id="<%= "#{x}-#{y}" %>">
				<!-- loop through every position on the board and look up the piece that's there from @piece_positions -->
					<% piece = @pieces_by_position["#{x}, #{y}"] %>

					<% if piece %>
						<% svg_data = ViewBro.svg_data_string_for_piece(piece, asset_path('Chess_Pieces_Sprite.svg')) %>
						<% display_class = "svg-piece-display" %>
						<% if current_user == @game.player_on_move && piece.color == @game.player_on_move_color && !@game.promotion_pending %>
							<% display_class += " drag-a-piece" %>
						<% end %>
						<img src="<%=svg_data%>" class="<%=display_class%>" id = "<%= piece.id %>" >
					<% end %>
				</div>
			<% end %>
		</div>
	<% end %>
</div>

<% if is_missing_player %>
	<% turn_status = 'awaiting-player-join' %>
<% else %>
	<% turn_status = current_user == @game.player_on_move ? "on-move" : "waiting" %>
<% end %>

<div id="turn-status-indicator" class="<%=turn_status%>"></div>
<div id="promotion-modal"></div>

<script src="https://www.gstatic.com/firebasejs/7.10.0/firebase-app.js"></script>
<script src="https://www.gstatic.com/firebasejs/7.10.0/firebase-database.js"></script>

<script>
	var turnStatusIndicator = $('#turn-status-indicator');

	$(document).ready(function(){

	<% if !@game.ended && !is_missing_player %>

		$(".drag-a-piece").draggable({ //piece image is draggable, see line 16
			scroll: false,
			containment: $('.chess-board-render')
		});

		$(".drag-a-piece").hover(function(){
			$(this).closest('.board-square').toggleClass("hover");
		});

		$(".board-square").droppable({
			classes: {
				"ui-droppable-hover": "select" //highlight droppable board square on hover
									//eventually: highlight only squares allowed by selected piece's move logic?
			},
			hoverClass: 'select',
			accept: '.drag-a-piece',
			drop: function( event, ui ) {
				var res = event.target.id
				var drop_square = res.split("-"); //lookup square specified within the loop at line 10

				var target_x = drop_square[0]
				var target_y = drop_square[1]			//split id string into x and y
				var piece_id = ui.draggable.prop('id');
				var path = "/games/<%= @game.id.to_s %>/" + piece_id + "/" + target_x + "/" + target_y;

				turnStatusIndicator.removeClass("on-move");
				turnStatusIndicator.addClass("moved-piece");

				var unloading = false;
				turnStatusIndicator.unload(function() {
					unload = true;
				});

				$.post(path, {}, function(data, status){
					<% turn_status = "moved-piece" %>
					turnStatusIndicator.attr("class","moved-piece");
					window.setTimeout(function(){
						if(!unloading) {
							location.reload();
							/* Because of the approach the Firebase callbacks necessitated, only successful moves
								(ones that update piece position in our Rails database) will refresh the page. */

							 /* The solution:
								 - Always call a function to refresh the page, but only after waiting a short amount of time
								 - Said function will only reload the page if the "unload" flag is set to false
								 - If there is a successful move, the page will automatically be redirected, which will
								 	set the "unload" flag to true (cancelling the auto-refresh)
							 */
						}
					}, 500); // Note the delay time of 500ms
				});
			}
		});

		<% if @game.promotion_pending && current_user == @game.player_on_move%>
			openPawnPromotionModal();
		<% end %>

	<% end %>

		$(function(){

			var firebaseConfig = {
				apiKey: "AIzaSyDKLqqj6W0usIqHaKiYwEjTSsNkfmQMl6c",
				authDomain: "bro-chess-b8ed8.firebaseapp.com",
				databaseURL: "https://bro-chess-b8ed8.firebaseio.com",
				projectId: "bro-chess-b8ed8",
				storageBucket: "bro-chess-b8ed8.appspot.com",
				messagingSenderId: "83722689851",
				appId: "1:83722689851:web:520b4909913c3f7e362b1e"
			};
			firebase.initializeApp(firebaseConfig);

			var database_path = `game <%= @game.id%>`
			firebase.database().ref(database_path).on('child_changed', function(dataSnapshot){

				if(dataSnapshot.val() === true) {
					
					location.reload(); // Reloads the game page, which will tell you how the game ended
				}

				if(turnStatusIndicator.hasClass('waiting')) {
					location.reload();
				}
				if(turnStatusIndicator.hasClass('moved-piece')) {
					location.reload();
				}
				if(turnStatusIndicator.hasClass('awaiting-player-join')) {
					location.reload();
				}

			});
		});
	});

	function openPawnPromotionModal () {
		var playerColor;

		var playerColor = <%= @game.player_on_move_color == 0 %> === true ? "black" : "white";
		
		$('#promotion-modal').dialog({
			title: "Select a promotion:",
			modal: true,
			dialogClass: 'booyah-box promotion-modal',
			buttons: [
				{
					"class": "promotion-button queen-button " + playerColor,
					click: function() { 
						onPromotionChosen (1);
					}
				},
				{
					"class": "promotion-button bishop-button " + playerColor,
					click: function() { 
						onPromotionChosen (2);
					}
				},
				{
					"class": "promotion-button knight-button " + playerColor,
					click: function() { 
						onPromotionChosen (3);
					}
				},
				{
					"class": "promotion-button rook-button " + playerColor,
					click: function() { 
						onPromotionChosen (4);
					}
				}
			]
		}); // choices: queen(1), bishop(2), knight(3), rook(4) 
	}

	function onPromotionChosen(promotionID) {
		turnStatusIndicator.removeClass("on-move");
		turnStatusIndicator.addClass("moved-piece");
		promotionPath = "/games/<%= @game.id.to_s %>/promote/" + String(promotionID);
		$.post(promotionPath);
	}
</script>

<script>
	function castling(data){
	    let rook_x_pos = 0;
	    let rook_y_pos = 0;
	    (data.color === 0) ?  rook_y_pos = 0 : rook_y_pos = 7;
	    (data.new_x === 6) ? rook_x_pos = 7 : rook_x_pos = 0;
	    let rook = $("[y_pos =" + rook_y_pos + "][x_pos =" + rook_x_pos + "]").find("span");
	    if (data.type === "King" && data.new_x === 6 && data.new_y === data.y_pos && data.x_pos === 4){
	      $("[y_pos =" + rook_y_pos + "][x_pos = 5]").append(rook);
	      $("[y_pos =" + rook_y_pos + "][x_pos =" + rook_x_pos + "]").find("span").remove();
	    }
	    if (data.type === "King" && data.new_x === 2 && data.new_y === data.y_pos && data.x_pos === 4){
	      $("[y_pos =" + rook_y_pos + "][x_pos = 3]").append(rook);
	      $("[y_pos =" + rook_y_pos + "][x_pos =" + rook_x_pos + "]").find("span").remove();
	    }
	    rook.css('top', '');
	    rook.css('left', '');
	}
</script>

<% turn_display_class = 'turn-display '%>

<% turn_display_class += (!is_missing_player && current_user == @game.player_on_move && !@game.ended) ? 'your-turn' : 'their-turn' %>

<% if is_missing_player%>
	<% turn_display_text = 'Waiting on a bro' %>
<% else %>
	<% if @game.ended %>
		<% turn_display_text = 'VICTORY' if current_user.id == @game.victorious_player_id %>
		<% turn_display_text = 'DEFEAT' if !@game.tied && current_user.id != @game.victorious_player_id %>
		<% turn_display_text = 'DRAW' if @game.tied %>
	<% else %>
		<% turn_display_text = (@game.player_on_move_color == 0 ? "Black": "White") + " player's move" %>
	<% end %>
<% end %>

<div class="<%=turn_display_class%>">
	<%=turn_display_text%>
<div>
