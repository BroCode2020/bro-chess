<% if !@game.forfeiting_player_id.nil? %>
	<%= controller.redirect_to root_path, alert: "This game has already been forfeited." %>
<% end %>

<div class="chess-board-render">
	<% tile_color = 1 %>

	<% 0.upto(7) do |y| %>
		<div class="board-row">

			<% 0.upto(7) do |x| %>
				<% tile_color = (tile_color == 0 ? 1 : 0) if x > 0 %>

				<div class="board-square <%= tile_color == 0 ? 'black': 'white' %>" id="<%= "#{x}-#{y}" %>">
				<!-- loop through every position on the board and look up the piece that's there from @piece_positions -->
					<% piece = @pieces_by_position["#{x}, #{y}"] %>

					<% if piece %>
						<% svg_data = @game.get_svg_data_string(piece, x, y, 45, asset_path('Chess_Pieces_Sprite.svg')) %>
						<% display_class = "svg-piece-display" %>
						<% if current_user == @game.player_on_move && piece.color == @game.player_on_move_color %>
							<% display_class += " drag-a-piece" %>
						<% end %>
						<img src="<%=svg_data%>" class="<%=display_class%>" id = "<%= piece.id %>" >
					<% end %>
				</div>
			<% end %>
		</div>
	<% end %>
</div>
<% turn_status = current_user == @game.player_on_move ? "on-move" : "waiting" %>
<div id="turn-status-indicator" class="<%=turn_status%>">STATUS: <%=turn_status%></div>
<!--on-move, waiting, moved-piece-->

<script src="https://www.gstatic.com/firebasejs/7.10.0/firebase-app.js"></script>
<script src="https://www.gstatic.com/firebasejs/7.10.0/firebase-database.js"></script>

<script>

	$(document).ready(function(){

		$(".drag-a-piece").draggable(); //piece image is draggable, see line 16

		$(".drag-a-piece").hover(function(){
			$(this).closest('.board-square').toggleClass("hover");
		});

		$(".board-square").droppable({
			classes: {
				"ui-droppable-hover": "select" //highlight droppable board square on hover
									//eventually: highlight only squares allowed by selected piece's move logic?
			},
			hoverClass: 'select',
			accept: '.drag-a-piece',
			drop: function( event, ui ) {
				var res = event.target.id
				var drop_square = res.split("-"); //lookup square specified within the loop at line 10
				//console.log(drop_square)
				var target_x = drop_square[0]
				var target_y = drop_square[1]			//split id string into x and y
				var piece_id = ui.draggable.prop('id');
				var path = "/games/<%= @game.id.to_s %>/" + piece_id + "/" + target_x + "/" + target_y;
				//console.log(path);
				$('.drag-a-piece').draggable('destroy');
				$('#turn-status-indicator').attr("class","moved-piece");//.hide().show(0);

				$.post(path, {}, function(data, status){
					//console.log(status)
					// location.reload();  //post and reload the board to draw the piece in the position.
					<% turn_status = "moved-piece" %>
					// $('#turn-status-indicator').attr("class","moved-piece");//.hide().show(0);
					$('#turn-status-indicator').addClass("moved-piece");
					$('#turn-status-indicator').removeClass("on-move");

					console.log('#turn-status-indicator to moved-piece')
					//can remove hide/show after debugging done
				});
			}
		});

		$(function(){

			var firebaseConfig = {
				apiKey: "AIzaSyDKLqqj6W0usIqHaKiYwEjTSsNkfmQMl6c",
				authDomain: "bro-chess-b8ed8.firebaseapp.com",
				databaseURL: "https://bro-chess-b8ed8.firebaseio.com",
				projectId: "bro-chess-b8ed8",
				storageBucket: "bro-chess-b8ed8.appspot.com",
				messagingSenderId: "83722689851",
				appId: "1:83722689851:web:520b4909913c3f7e362b1e"
			};
			firebase.initializeApp(firebaseConfig);

			var database_path = `game <%= @game.id%>`
			firebase.database().ref(database_path).on('child_changed', function(dataSnapshot){
									
				if($('#turn-status-indicator').hasClass('waiting')) {
					location.reload();
				}
				if($('#turn-status-indicator').hasClass('moved-piece')) {
					location.reload();
				}
				// <% if current_user != @game.player_on_move %>
				// 	// Note that 'value' option loads once when everything initializes, then again every time the value changes
				// 	if(dataSnapshot.val() !== <%=@game.player_on_move_color%>) {
				// 		// After player-a moves, player-b gets reloaded properly, but player-a get caught in redirect loop 
				// 		
				// 	}
				// <% end %>
			});
		});
	});
	
	function castling(data){
	    let rook_x_pos = 0;
	    let rook_y_pos = 0;
	    (data.color === 0) ?  rook_y_pos = 0 : rook_y_pos = 7;
	    (data.new_x === 6) ? rook_x_pos = 7 : rook_x_pos = 0;
	    let rook = $("[y_pos =" + rook_y_pos + "][x_pos =" + rook_x_pos + "]").find("span");
	    if (data.type === "King" && data.new_x === 6 && data.new_y === data.y_pos && data.x_pos === 4){
	      $("[y_pos =" + rook_y_pos + "][x_pos = 5]").append(rook);
	      $("[y_pos =" + rook_y_pos + "][x_pos =" + rook_x_pos + "]").find("span").remove();
	    }
	    if (data.type === "King" && data.new_x === 2 && data.new_y === data.y_pos && data.x_pos === 4){
	      $("[y_pos =" + rook_y_pos + "][x_pos = 3]").append(rook);
	      $("[y_pos =" + rook_y_pos + "][x_pos =" + rook_x_pos + "]").find("span").remove();
	    }
	    rook.css('top', '');
	    rook.css('left', '');
	}

</script>



<% turn_display_class = 'turn-display '%>
<% if current_user == @game.player_on_move %>
    <% turn_display_class += 'your-turn' %>
	<% turn_display_text = 'Your move' %>
<% else %>
    <% turn_display_class += 'their-turn' %>
	<% turn_display_text = (@game.player_on_move_color == 0 ? "Black": "White") + " player's move" %>
<% end %>

<div class="<%=turn_display_class%>">
	<%=turn_display_text%>
<div>
